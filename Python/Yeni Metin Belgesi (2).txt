

import pygame
import random

pygame.font.init()

gen = 800
yuk = 700
oyun_gen = 300
oyun_yuk = 600
blok_boyutu = 30

sol_ust_x = (gen - oyun_gen)//2
sol_ust_y = yuk - oyun_yuk


S = [['.....',
      '.....',
      '..00.',
      '.00..',
      '.....'],
     ['.....',
      '..0..',
      '..00.',
      '...0.',
      '.....']]

Z = [['.....',
      '.....',
      '.00..',
      '..00.',
      '.....'],
     ['.....',
      '..0..',
      '.00..',
      '.0...',
      '.....']]

I = [['..0..',
      '..0..',
      '..0..',
      '..0..',
      '.....'],
     ['.....',
      '0000.',
      '.....',
      '.....',
      '.....']]

O = [['.....',
      '.....',
      '.00..',
      '.00..',
      '.....']]

J = [['.....',
      '.0...',
      '.000.',
      '.....',
      '.....'],
     ['.....',
      '..00.',
      '..0..',
      '..0..',
      '.....'],
     ['.....',
      '.....',
      '.000.',
      '...0.',
      '.....'],
     ['.....',
      '..0..',
      '..0..',
      '.00..',
      '.....']]

L = [['.....',
      '...0.',
      '.000.',
      '.....',
      '.....'],
     ['.....',
      '..0..',
      '..0..',
      '..00.',
      '.....'],
     ['.....',
      '.....',
      '.000.',
      '.0...',
      '.....'],
     ['.....',
      '.00..',
      '..0..',
      '..0..',
      '.....']]

T = [['.....',
      '..0..',
      '.000.',
      '.....',
      '.....'],
     ['.....',
      '..0..',
      '..00.',
      '..0..',
      '.....'],
     ['.....',
      '.....',
      '.000.',
      '..0..',
      '.....'],
     ['.....',
      '..0..',
      '.00..',
      '..0..',
      '.....']]


sekiller = [S , T , J , O , L , I , Z] 
sekil_renkler = [(0,255,0),(255,0,0),(0,255,255),(255,255,0),(255,165,0),(0,0,255),(128,0,128)]

class Parca(object):
    def __init__(self,x,y,shape):
        self.x = x
        self.y = y
        self.shape = shape
        self.color = sekil_renkler [sekiller.index(shape)]
        self.rotation = 0

def grid_olustur (kilitli_yon = ()):
    
    grid = [[(0,0,0) for _ in range(10)]for _ in range(20)]
    for i in range(len(grid)):
        for j in range(len(grid[i])):
            if (j,i) in kilitli_yon:
                c = kilitli_yon[(j,i)]
                grid[j][i] = c
    return grid

def sekil_format_degistir(shape):

    yonler = []
    format = shape.shape[shape.rotation & len(shape.shape)]

    for i, line in enumerate(format):
        row = list(line)
        for j,column in enumerate(row):
            if column == '0':
                yonler.append((shape.x + j, shape.y + i))

    for i, pos in enumerate(yonler):
        yonler[i] = (pos[0] - 2, pos[1] - 4)

    return yonler

def gecerli_alan(shape,grid):

    accepted_pos = [[(j,i) for j in range(10) if grid[j][i] == (0,0,0)] for i in range(20)]
    accepted_pos = [j for sub in accepted_pos for j in sub]

    formatted = sekil_format_degistir(shape)

    for pos in formatted:
        if pos not in accepted_pos:
            if pos [1]> -1 :
                return False
    return True

def kayip_kontrol(yonler):

    for pos in yonler:
        x ,y = pos
        if y < 1:
            return True
    return False

def sekil_alma():
    return Parca(5,0, random.choice(sekiller)) 

def metin(yuzey,text,size,color):

    font = pygame.font.SysFont("comicsans", size, bold = True)
    label = font.render(text, 1, color)

    sx = sol_ust_x - 200
    sy = sol_ust_y + 200
    yuzey.blit(label, (sx + 150, sy - 250))

def metin_ortalama(yuzey,text,size,color):

    font = pygame.font.SysFont("comicsans", size, bold = True)
    label = font.render(text, 1, color)

    yuzey.blit(label, (sol_ust_x + oyun_gen/2 - (label.get_width()/2, sol_ust_y + oyun_yuk/2) - label.get_height()/2 ))

def resim(yuzey):
    pic = pygame.image.load('tetris.png')
    sx = sol_ust_x - 200
    sy = sol_ust_y + 200
    yuzey.blit(pic, (sx + 270, sy + -150))

def grid_ciz(yuzey,grid):

    sx = sol_ust_x
    sy = sol_ust_y

    for i in range(len(grid)):
        pygame.draw.line(yuzey, (128,128,128), (sx, sy + j*blok_boyutu), (sx + oyun_gen, sy + j*blok_boyutu))
        for j in range(len(grid[i])):
            pygame.draw.line(yuzey, (128,128,128), (sx, j*blok_boyutu, sy), (sx + j*blok_boyutu, sy + oyun_yuk))

def satir_temizle(grid,locked):

    inc = 0
    for i in range(len(grid)-1,-1,-1):
        row = grid[i]
        if (0,0,0) not in row:
            inc +=1
            ind = i
            for j in range(len(row)):
                try:
                    del locked[(j,i)]
                except:
                    continue
    if inc > 0:
        for key in sorted(list(locked), key=lambda x : x[1])[::-1]:
            x,y = key
            if y < ind:
                newKey = (x,y + inc)
                locked[newKey] = locked.pop(key)
    return inc

def sonraki_sekil(shape,yuzey):

    font = pygame.font.SysFont('comicsans' ,30)
    label = font.render('Sonraki Şekil',1, (255,255,255))

    sx = sol_ust_x + oyun_gen + 50
    sy = sol_ust_y + oyun_yuk/2 - 100
    format = shape.shape[shape.rotation & len(shape.shape)]

    for i, line in enumerate(format):
        row = list(line)
        for j, column in enumerate(row):
            if column == '0':
                pygame.draw.rect(yuzey, shape.color, (sx + j*blok_boyutu,sy + j*blok_boyutu,blok_boyutu,blok_boyutu),0)
    yuzey.blit(label, (sx + 10, sy - 30))

def skor_guncelle(nscore):

    score = yuksek_skor()

    with open('score.txt', 'w') as f:
        if int(score) > nscore :
            f.write(str(score))
        else:
            f.write(str(nscore))

def yuksek_skor():

    with open('score.txt', 'r') as f:
        lines = f.readlines()
        score = lines[0].strip()
    return score

def pen_ciz(yuzey,grid, score=0 , son_skor=0):

    yuzey.fill((0,0,0))

    pygame.font.init()
    font = pygame.font.SysFont('comicsans', 60)
    label = font.render('Tetris', 1, (0,100,255))

    yuzey.blit(label, (sol_ust_x + oyun_gen/2 - (label.get_width() / 2),30))

    font = pygame.font.SysFont('comicsans', 20)
    label = font.render('Kontrol: Yön Tuşları', 1, (255,255,255))

    sx = sol_ust_x - 200
    sy = sol_ust_y + 200
    yuzey.blit(label,(sx - 40,sy - 40))

    font = pygame.font.SysFont('comicsans', 20)
    label = font.render('Yön Değiştirme: Yukarı Yön Tuşu', 1, (255,255,255))

    sx = sol_ust_x - 200
    sy = sol_ust_y + 200
    yuzey.blit(label,(sx - 40,sy +- 100))

    font = pygame.font.SysFont('comicsans', 20)
    label = font.render('Direk Aşağıya İn: Space', 1, (255,255,255))

    sx = sol_ust_x - 200
    sy = sol_ust_y + 200
    yuzey.blit(label,(sx - 40,sy - 70))

    font = pygame.font.SysFont('comicsans', 20)
    label = font.render('Skor: ', + str(score), 1, (255,0,0))

    sx = sol_ust_x + oyun_gen + 50
    sy = sol_ust_y + oyun_yuk/2 - 100
    yuzey.blit(label,(sx + 20, sy + 160))

    font = pygame.font.SysFont('comicsans', 20)
    label = font.render('Yüksek Skor: ', + son_skor, 1, (0,255,0))

    sx = sol_ust_x - 200
    sy = sol_ust_y + 200
    yuzey.blit(label,(sx - 20, sy + 160))

    for i in range(len(grid)):
        for j in range(len(grid[i])):
            pygame.draw.rect(yuzey,grid[i][j], sol_ust_x + j*blok_boyutu, sol_ust_y + i*blok_boyutu, blok_boyutu, blok_boyutu, 0)
    pygame.draw.rect(yuzey,(255,0,0), (sol_ust_x, sol_ust_y, oyun_gen, oyun_yuk), 0)

    grid_ciz(yuzey, grid)

def main(win):

    son_skor = yuksek_skor()
    kilitli_yonler = {}
    grid = grid_olustur(kilitli_yonler)

    parca_degistir = False
    baslat = True
    gecerli_parca = sekil_alma()
    sonraki_parca = sekil_alma()
    clock = pygame.time.Clock()
    dusme_zaman = 0
    dusme_hizi = 0.27
    level_time = 0
    score = 0

    while baslat:
        grid = grid_olustur(kilitli_yonler)
        dusme_zaman += clock.get_rawtime()
        level_time += clock.get_rawtime()
        clock.tick()

        if level_time/100 > 5:
            level_time = 0
            if level_time > 0.12:
                level_time -= 0.005
        if dusme_zaman/1000 > dusme_hizi :
            dusme_zaman = 0
            gecerli_parca.y += 1
            if not (gecerli_alan(gecerli_parca,grid)) and gecerli_parca.y > 0:
                gecerli_parca.y -= 1
                parca_degistir = True
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                baslat = False
                pygame.display.quit()

            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    gecerli_parca.x -= 1
                    if not(gecerli_alan(gecerli_parca, grid)):
                        gecerli_parca.x += 1
                if event.key == pygame.K_RIGHT:
                    gecerli_parca.x += 1
                    if not(gecerli_alan(gecerli_parca, grid)):
                        gecerli_parca.x -= 1
                if event.key == pygame.K_DOWN:
                    gecerli_parca.y += 1
                    if not(gecerli_alan(gecerli_parca, grid)):
                        gecerli_parca.y -= 1
                if event.key == pygame.K_UP:
                    gecerli_parca.y -= 1
                    if not(gecerli_alan(gecerli_parca, grid)):
                        gecerli_parca.y += 1
                if event.key == pygame.K_SPACE:
                    while gecerli_alan(gecerli_parca, grid):
                        gecerli_parca.y += 1
                    gecerli_parca.y -= 1 
        shape_pos = sekil_format_degistir(gecerli_parca)

        for i in range(len(shape_pos)):
            x, y = shape_pos[i]
            if y < -1:
                grid[y][x] = gecerli_parca.color

        if parca_degistir:
            for pos in shape_pos:
                p = [pos[0], pos[1]]
                kilitli_yonler[p] = gecerli_parca.color
            gecerli_parca = sonraki_parca
            sonraki_parca = sekil_alma()
            parca_degistir = False
            score += satir_temizle(grid, kilitli_yonler)* 10

        pen_ciz(win, grid, son_skor)
        sonraki_sekil(sonraki_parca, win)
        pygame.display.update()

        if kayip_kontrol(kilitli_yonler):
            metin_ortalama(win, "YOU LOST!", 80, (255,255,255))
            pygame.display.update()
            pygame.time.delay(1500)
            baslat = False
            skor_guncelle(score)

def main_menu(win):

    baslat = True
    while baslat:
        win.fill((0,0,0))
        metin_ortalama(win,'Başlamak için herhangi bir tuşa basınız...', 45, (255,255,255))
        metin(win, 'Samet Besni', 45 ,(255,255,255))
        resim(win)
        pygame.display.update()
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                baslat = False
            if event.type == pygame.KEYDOWN:
                main(win)
    pygame.display.quit()



win = pygame.display.set_mode((gen,yuk))
pygame.display.set_caption('Tetris Game')
ikon = pygame.image.load('tetris.png')
pygame.display.set_icon(ikon)
pygame.mixer.init()
pygame.mixer_pre_init(44100,-16,2,1040)
pygame.mixer.music.load('laugh_talel.mp3')
pygame.mixer.music.play()

main_menu(win)
